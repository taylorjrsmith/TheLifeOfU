// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheTaleOfU.NetCore.DataLayer;

namespace TheTaleOfU.NetCore.DataLayer.Migrations
{
    [DbContext(typeof(TheTaleOfUContext))]
    partial class TheTaleOfUContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TheTaleOfU.NetCore.EntityLayer.Events.GainItemEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomText");

                    b.Property<int?>("ItemId");

                    b.Property<int>("OptionId");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("OptionId");

                    b.ToTable("GainItemEvent");
                });

            modelBuilder.Entity("TheTaleOfU.NetCore.EntityLayer.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Damage");

                    b.Property<int>("Durability");

                    b.Property<string>("Effect");

                    b.Property<string>("Name");

                    b.Property<int>("Type");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("TheTaleOfU.NetCore.EntityLayer.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("NextScenarioId");

                    b.Property<int>("OptionIdentifier");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("NextScenarioId");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("TheTaleOfU.NetCore.EntityLayer.Scenario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AllowedPlayerTypes");

                    b.Property<string>("EndOfEventMethodName");

                    b.Property<bool>("IsEndOfScenarioRoute");

                    b.Property<string>("ScenarioDescription");

                    b.HasKey("Id");

                    b.ToTable("Scenarios");
                });

            modelBuilder.Entity("TheTaleOfU.NetCore.EntityLayer.Events.GainItemEvent", b =>
                {
                    b.HasOne("TheTaleOfU.NetCore.EntityLayer.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.HasOne("TheTaleOfU.NetCore.EntityLayer.Option", "Option")
                        .WithMany("GainItemEvents")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TheTaleOfU.NetCore.EntityLayer.Option", b =>
                {
                    b.HasOne("TheTaleOfU.NetCore.EntityLayer.Scenario", "NextScenario")
                        .WithMany("Options")
                        .HasForeignKey("NextScenarioId");
                });
#pragma warning restore 612, 618
        }
    }
}
